
#Panda_Ass

#Q1

a=np.array([12,1,23,34,2,34,4])
p=pd.Series(a)
b=np.arange(1,12)
p1=pd.Series(b)

print(p)
print(p1)
p+p1		#p.add(p1,fill_value=1)
p-p1		#p.sub(p1)
p*p1		#p.multiply(p1)
p/p1		#p.divide(p1)


#Q2-------------------------------------------------

d={"name":"vaibhav", "Roll no":12 , "marks":99 }
x=pd.Series(d)
print(x)


#Q3-------------------------------------------------

n=np.arange(1,41)
print(n)
s=pd.Series(n)
print(s)
#Q4-------------------------------------------------

n=np.arange(1,41)
print(n)
s=pd.Series(n)
print(s)
s.head()

#------------------------------------------------------------------------------------

#Q1-------------------------------------------------

s=pd.DataFrame(exam_data,labels)
print(s)


#Q2-------------------------------------------------

s.info()


#Q3-------------------------------------------------

s.head(3)


#Q4-------------------------------------------------

s[["name","score"]]			#s.loc[::2,["name","score"]]


#Q5-------------------------------------------------

d={"col1":[1,2,3], "col2":[4,5,6] , "col3":[7,8,9] }
x=pd.Series(d)
print(x)
x.rename(index={'col1':'First'})


#Q6-------------------------------------------------

s.loc[::2,["name","score"]]


#Q7-------------------------------------------------

s[s["attempts"]>2]


#Q8-------------------------------------------------

s.count(axis=0)


#Q9-------------------------------------------------

s[s['score'].isna()]


#Q10------------------------------------------------

s[(s['score']>=15) & (s['score']<=20)]


#Q11------------------------------------------------

s[(s['score']>15) & (s['attempts']<2)]


#Q12------------------------------------------------

s['attempts'].sum()


#Q13------------------------------------------------

s['score'].mean()


#Q14------------------------------------------------

s["k"]=10
print(s)
s.drop(columns="k")


#Q15------------------------------------------------

s.sort_values(["name","score"],ascending=[False,True])


#Q16------------------------------------------------

s['qualify'] = s['qualify'].replace(['yes', 'no'], ['True','False'])


#Q17------------------------------------------------

s.drop(columns="attempts")


#Q18------------------------------------------------

s["column"]=10
print(s)
